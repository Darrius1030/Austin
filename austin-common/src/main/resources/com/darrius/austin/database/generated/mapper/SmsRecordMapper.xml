<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.darrius.austin.database.generated.mapper.SmsRecordMapper">
  <resultMap id="BaseResultMap" type="com.darrius.austin.database.generated.model.SmsRecord">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="message_template_id" jdbcType="BIGINT" property="messageTemplateId" />
    <result column="phone" jdbcType="BIGINT" property="phone" />
    <result column="supplier_id" jdbcType="TINYINT" property="supplierId" />
    <result column="supplier_name" jdbcType="VARCHAR" property="supplierName" />
    <result column="msg_content" jdbcType="VARCHAR" property="msgContent" />
    <result column="series_id" jdbcType="VARCHAR" property="seriesId" />
    <result column="charging_num" jdbcType="TINYINT" property="chargingNum" />
    <result column="report_content" jdbcType="VARCHAR" property="reportContent" />
    <result column="status" jdbcType="TINYINT" property="status" />
    <result column="send_date" jdbcType="INTEGER" property="sendDate" />
    <result column="created" jdbcType="INTEGER" property="created" />
    <result column="updated" jdbcType="INTEGER" property="updated" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, message_template_id, phone, supplier_id, supplier_name, msg_content, series_id, 
    charging_num, report_content, status, send_date, created, updated
  </sql>
  <select id="selectByExample" parameterType="com.darrius.austin.database.generated.model.SmsRecordExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from sms_record
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from sms_record
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from sms_record
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.darrius.austin.database.generated.model.SmsRecordExample">
    delete from sms_record
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.darrius.austin.database.generated.model.SmsRecord">
    insert into sms_record (id, message_template_id, phone, 
      supplier_id, supplier_name, msg_content, 
      series_id, charging_num, report_content, 
      status, send_date, created, 
      updated)
    values (#{id,jdbcType=BIGINT}, #{messageTemplateId,jdbcType=BIGINT}, #{phone,jdbcType=BIGINT}, 
      #{supplierId,jdbcType=TINYINT}, #{supplierName,jdbcType=VARCHAR}, #{msgContent,jdbcType=VARCHAR}, 
      #{seriesId,jdbcType=VARCHAR}, #{chargingNum,jdbcType=TINYINT}, #{reportContent,jdbcType=VARCHAR}, 
      #{status,jdbcType=TINYINT}, #{sendDate,jdbcType=INTEGER}, #{created,jdbcType=INTEGER}, 
      #{updated,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.darrius.austin.database.generated.model.SmsRecord">
    insert into sms_record
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="messageTemplateId != null">
        message_template_id,
      </if>
      <if test="phone != null">
        phone,
      </if>
      <if test="supplierId != null">
        supplier_id,
      </if>
      <if test="supplierName != null">
        supplier_name,
      </if>
      <if test="msgContent != null">
        msg_content,
      </if>
      <if test="seriesId != null">
        series_id,
      </if>
      <if test="chargingNum != null">
        charging_num,
      </if>
      <if test="reportContent != null">
        report_content,
      </if>
      <if test="status != null">
        status,
      </if>
      <if test="sendDate != null">
        send_date,
      </if>
      <if test="created != null">
        created,
      </if>
      <if test="updated != null">
        updated,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=BIGINT},
      </if>
      <if test="messageTemplateId != null">
        #{messageTemplateId,jdbcType=BIGINT},
      </if>
      <if test="phone != null">
        #{phone,jdbcType=BIGINT},
      </if>
      <if test="supplierId != null">
        #{supplierId,jdbcType=TINYINT},
      </if>
      <if test="supplierName != null">
        #{supplierName,jdbcType=VARCHAR},
      </if>
      <if test="msgContent != null">
        #{msgContent,jdbcType=VARCHAR},
      </if>
      <if test="seriesId != null">
        #{seriesId,jdbcType=VARCHAR},
      </if>
      <if test="chargingNum != null">
        #{chargingNum,jdbcType=TINYINT},
      </if>
      <if test="reportContent != null">
        #{reportContent,jdbcType=VARCHAR},
      </if>
      <if test="status != null">
        #{status,jdbcType=TINYINT},
      </if>
      <if test="sendDate != null">
        #{sendDate,jdbcType=INTEGER},
      </if>
      <if test="created != null">
        #{created,jdbcType=INTEGER},
      </if>
      <if test="updated != null">
        #{updated,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.darrius.austin.database.generated.model.SmsRecordExample" resultType="java.lang.Long">
    select count(*) from sms_record
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update sms_record
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.messageTemplateId != null">
        message_template_id = #{record.messageTemplateId,jdbcType=BIGINT},
      </if>
      <if test="record.phone != null">
        phone = #{record.phone,jdbcType=BIGINT},
      </if>
      <if test="record.supplierId != null">
        supplier_id = #{record.supplierId,jdbcType=TINYINT},
      </if>
      <if test="record.supplierName != null">
        supplier_name = #{record.supplierName,jdbcType=VARCHAR},
      </if>
      <if test="record.msgContent != null">
        msg_content = #{record.msgContent,jdbcType=VARCHAR},
      </if>
      <if test="record.seriesId != null">
        series_id = #{record.seriesId,jdbcType=VARCHAR},
      </if>
      <if test="record.chargingNum != null">
        charging_num = #{record.chargingNum,jdbcType=TINYINT},
      </if>
      <if test="record.reportContent != null">
        report_content = #{record.reportContent,jdbcType=VARCHAR},
      </if>
      <if test="record.status != null">
        status = #{record.status,jdbcType=TINYINT},
      </if>
      <if test="record.sendDate != null">
        send_date = #{record.sendDate,jdbcType=INTEGER},
      </if>
      <if test="record.created != null">
        created = #{record.created,jdbcType=INTEGER},
      </if>
      <if test="record.updated != null">
        updated = #{record.updated,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update sms_record
    set id = #{record.id,jdbcType=BIGINT},
      message_template_id = #{record.messageTemplateId,jdbcType=BIGINT},
      phone = #{record.phone,jdbcType=BIGINT},
      supplier_id = #{record.supplierId,jdbcType=TINYINT},
      supplier_name = #{record.supplierName,jdbcType=VARCHAR},
      msg_content = #{record.msgContent,jdbcType=VARCHAR},
      series_id = #{record.seriesId,jdbcType=VARCHAR},
      charging_num = #{record.chargingNum,jdbcType=TINYINT},
      report_content = #{record.reportContent,jdbcType=VARCHAR},
      status = #{record.status,jdbcType=TINYINT},
      send_date = #{record.sendDate,jdbcType=INTEGER},
      created = #{record.created,jdbcType=INTEGER},
      updated = #{record.updated,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.darrius.austin.database.generated.model.SmsRecord">
    update sms_record
    <set>
      <if test="messageTemplateId != null">
        message_template_id = #{messageTemplateId,jdbcType=BIGINT},
      </if>
      <if test="phone != null">
        phone = #{phone,jdbcType=BIGINT},
      </if>
      <if test="supplierId != null">
        supplier_id = #{supplierId,jdbcType=TINYINT},
      </if>
      <if test="supplierName != null">
        supplier_name = #{supplierName,jdbcType=VARCHAR},
      </if>
      <if test="msgContent != null">
        msg_content = #{msgContent,jdbcType=VARCHAR},
      </if>
      <if test="seriesId != null">
        series_id = #{seriesId,jdbcType=VARCHAR},
      </if>
      <if test="chargingNum != null">
        charging_num = #{chargingNum,jdbcType=TINYINT},
      </if>
      <if test="reportContent != null">
        report_content = #{reportContent,jdbcType=VARCHAR},
      </if>
      <if test="status != null">
        status = #{status,jdbcType=TINYINT},
      </if>
      <if test="sendDate != null">
        send_date = #{sendDate,jdbcType=INTEGER},
      </if>
      <if test="created != null">
        created = #{created,jdbcType=INTEGER},
      </if>
      <if test="updated != null">
        updated = #{updated,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.darrius.austin.database.generated.model.SmsRecord">
    update sms_record
    set message_template_id = #{messageTemplateId,jdbcType=BIGINT},
      phone = #{phone,jdbcType=BIGINT},
      supplier_id = #{supplierId,jdbcType=TINYINT},
      supplier_name = #{supplierName,jdbcType=VARCHAR},
      msg_content = #{msgContent,jdbcType=VARCHAR},
      series_id = #{seriesId,jdbcType=VARCHAR},
      charging_num = #{chargingNum,jdbcType=TINYINT},
      report_content = #{reportContent,jdbcType=VARCHAR},
      status = #{status,jdbcType=TINYINT},
      send_date = #{sendDate,jdbcType=INTEGER},
      created = #{created,jdbcType=INTEGER},
      updated = #{updated,jdbcType=INTEGER}
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>